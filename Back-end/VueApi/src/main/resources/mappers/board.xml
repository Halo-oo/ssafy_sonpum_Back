<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.vue.model.mapper.BoardMapper">

	<!-- 공동 사용 SQL문 -->
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				and subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				<!-- and ${key} = #{word} -->
				where content like concat('%', #{word}, '%')
			</if>
		</if>
	</sql>

	<!-- #공지사항 -->
	<!-- 게시글 작성 -->
	<insert id="noticeWriteArticle" parameterType="boardNoticeDto">
		insert into board_notice (userid, subject, content, hit, regitime)
		values (#{userId}, #{subject}, #{content}, 0, now());
	</insert>
	
	<!-- 게시글 목록 -->
	<select id="noticeListArticle" parameterType="map" resultType="boardNoticeDto">
		select articleno, userid, subject, content, hit,
				case when date_format(regitime, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(regitime, '%H:%i:%s')
				else date_format(regitime, '%y.%m.%d')
				end regitime
		from board_notice
		<!-- <include refid="search"></include> -->
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				<!-- where ${key} = #{word} -->
				where content like concat('%', #{word}, '%')
			</if>
		</if>
		order by articleno desc
		<!-- limit #{start}, #{spp} -->
	</select>
	
	<!-- 게시글 목록 총 개수 -->
	<select id="noticeGetTotalCount" parameterType="map" resultType="int">
		select count(articleno)
		from board_notice
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				where ${key} = #{word}
			</if>
		</if>
	</select>
	
	<!-- 게시글 상세보기 -->
	<select id="noticeGetArticle" parameterType="int" resultType="boardNoticeDto">
		select articleno, userid, subject, content, hit, regitime
		from board_notice
		where articleno = #{articleNo}
	</select>
	
	<!-- 조회수 -->
	<update id="noticeUpdateHit" parameterType="int">
		update board_notice
		set hit = hit + 1
		where articleno = #{articleNo}
	</update>
	
	<!-- 수정 -->
	<update id="noticeModifyArticle" parameterType="boardNoticeDto">
		update board_notice
		set subject = #{subject}, content = #{content}
		where articleno = #{articleNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="noticeDeleteArticle" parameterType="int">
		delete from board_notice
		where articleno = #{articleNo}
	</delete>
	
	
	<!-- # 전세사기 수법 -->
	<resultMap type="boardReportDto" id="viewReport">
		<collection property="boardReportImages" column="articleNo" javaType="list" ofType="boardReportImageDto" select="reportImageList" />
	</resultMap>
	
	<!-- 게시글 작성(+ 이미지 업로드) -->
	<insert id="reportWriteArticle" parameterType="boardReportDto">
		insert into board_report (userid, subject, content, hit, regitime)
		values (#{userId}, #{subject}, #{content}, 0, now())
		<selectKey resultType="int" keyProperty="articleNo" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	<!-- 이미지 -->
	<insert id="reportWriteArticleImage" parameterType="boardReportDto">
		insert into board_report_image (articleNo, saveFolder, originalFileName, saveFileName)
		values
		<foreach collection="boardReportImages" item="boardReportImage" separator=" , ">
			(#{articleNo}, #{boardReportImage.saveFolder}, #{boardReportImage.originalFileName}, #{boardReportImage.saveFileName})
		</foreach>
	</insert>

	<!-- 게시글 목록 -->
	<select id="reportListArticle" parameterType="map" resultType="boardReportDto">
		select articleno, userid, subject, content, hit,
				case when date_format(regitime, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(regitime, '%H:%i:%s')
				else date_format(regitime, '%y.%m.%d')
				end regitime
		from board_report
		<!-- <include refid="search"></include> -->
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				<!-- where ${key} = #{word} -->
				where content like concat('%', #{word}, '%')
			</if>
		</if>
		order by articleno desc
		<!-- limit #{start}, #{spp} -->
	</select>
	
	<!-- 게시글 목록 총 개수 -->
	<select id="reportGetTotalCount" parameterType="map" resultType="int">
		select count(articleno)
		from board_report
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				where ${key} = #{word}
			</if>
		</if>
	</select>
	
	<!-- 게시글 상세보기(+ 이미지) -->
	<!-- <select id="reportGetArticle" parameterType="int" resultType="boardReportDto">
		select articleno, userid, subject, content, hit, regitime
		from board_report
		where articleno = #{articleNo}
	</select> -->
	<select id="reportGetArticle" parameterType="int" resultMap="viewReport">
		select articleno, userid, subject, content, hit, regitime
		from board_report
		where articleno = #{articleno}
	</select>
	<select id="reportImageList" resultType="boardReportImageDto">
		select boardReportImageId, articleNo, saveFolder, originalFileName, saveFileName
		from board_report_image
		where articleNo = #{articleno}
	</select>
	
	<!-- 조회수 -->
	<update id="reportUpdateHit" parameterType="int">
		update board_report
		set hit = hit + 1
		where articleno = #{articleno}
	</update>
	
	<!-- 수정 -->
	<update id="reportModifyArticle" parameterType="boardReportDto">
		update board_report
		set subject = #{subject}, content = #{content}
		where articleno = #{articleNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="reportDeleteArticle" parameterType="int">
		delete from board_report
		where articleno = #{articleNo}
	</delete>
	<!-- ! 게시글 삭제 시 연관된 이미지 삭제 -->
	<delete id="reportDeleteRealtionImage" parameterType="int">
		delete from board_report_image
		where articleno = #{articleNo}
	</delete>
	
	<!-- 특정 게시글의 이미지 삭제 -->
	<delete id="reportDeleteImage" parameterType="int">
		delete from board_report_image
		where boardReportImageId = #{boardReportImageid};
	</delete>
	
	
</mapper>

