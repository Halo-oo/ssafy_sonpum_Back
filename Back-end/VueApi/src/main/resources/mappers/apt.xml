<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.model.mapper.HouseMapMapper">

	<!-- #(시세)아파트 거래내역 -->
	<!-- 시도정보 전체 호출 -->
	<select id="getSido" resultType="sidoGugunCodeDto">
		select left(sidoCode,2) sidoCode, sidoName
		from sidocode
		order by sidoCode
	</select>
	
	<!-- 선택한 시도에 포함된 구군 정보 호출 -->
	<select id="getGugunInSido" parameterType="string" resultType="sidoGugunCodeDto">
		select left(gugunCode,5) gugunCode, gugunName
		from guguncode
		where left(gugunCode,2) = #{sido}
		order by gugunCode
	</select>
	
	<!-- 선택한 구군에 포함된 동 정보 호출 -->
	<select id="getDongInGugun" parameterType="string" resultType="houseDealDongDto">
		select distinct dongName, dongCode
		from dongcode
		where left(dongCode, 5) = #{gugun}
		order by dongName;
	</select>
	
	<!-- 선택한 동에 포함된 아파트 정보 호출 (+ 검색) -->
	<select id="getAptInDong" parameterType="houseParameterDto" resultType="houseDealInfoDto">
		select deal.addressId, address.apartName, address.dongCode, address.buildYear, deal.dealAmount, deal.dealYear, deal.dealMonth, deal.dealDay, deal.area, deal.floor
		from house_deal deal, address
		left join sidocode si 
		on left(address.dongcode, 2) = left(si.sidocode, 2)
		left join guguncode gu
		on left(address.dongcode, 5) = left(gu.guguncode, 5)
		where dongCode = #{dongCode}
			<if test="word != null and word != ''">
				<if test="key == 'amount'">
					and <![CDATA[convert(deal.dealAmount, signed) <= #{word}]]>
				</if>
				<if test="key == 'area'">
					and <![CDATA[convert(deal.area, signed) >= #{word}]]>
				</if>
				<if test="key == 'floor'">
					and <![CDATA[convert(deal.floor, signed) >= #{word}]]>
				</if>
				<if test="key == 'buildYear'">
					and <![CDATA[address.buildYear >= #{word}]]>
				</if>
				<if test="key == 'apartName'">
					and address.apartName like concat('%', #{word}, '%')
				</if>
				<if test="key == 'dealDate'">
					<!-- and concat(deal.dealYear, deal.dealMonth, deal.dealDay) = #{word} -->
					and deal.dealYear = #{dealYear} and deal.dealMonth = #{dealMonth}
				</if>
			</if>
		order by deal.dealYear desc
		limit 0, 100
	</select>
	
	
	<!-- #매물 게시판 -->
	<!-- 매물 등록 -->
	<insert id="registerHouseProduct" parameterType="houseProductDto">
		insert into house_product (userId, addressId, floor, buildYear, dealAmount, area, dealType, stateFlag, content)
		values (#{userId}, #{addressId}, #{floor}, #{buildYear}, #{dealAmount}, #{area}, #{dealType}, 0, #{content}); 
	</insert>
	
	<!-- 매물 목록(+ 검색) -->
	<select id="listHouseProduct" parameterType="houseProductParameterDto" resultType="houseProductDto">
		select houseProductId, userId, addressId, floor, buildYear, dealAmount, area, dealType, stateFlag, content
		from house_product
		where addressId = #{addressId}
			<if test="word != null and word != ''">
			<if test="key == 'amount'">
				and <![CDATA[convert(dealAmount, signed) <= #{word}]]>
			</if>
			<if test="key == 'area'">
				and <![CDATA[convert(area, signed) >= #{word}]]>
			</if>
			<if test="key == 'floor'">
				and <![CDATA[convert(floor, signed) >= #{word}]]>
			</if>
			<if test="key == 'buildYear'">
				and <![CDATA[buildYear >= #{word}]]>
			</if>
			<if test="key == 'userId'">
				and userId = #{userId}
			</if>
			<if test="key == 'dealType'">
				and dealType = #{dealType}
			</if>
		</if>
		order by houseProductId desc
	</select>
	
	<!-- 매물 상세보기 -->
	
	<!-- 매물 수정 -->
	<update id="updateHouseProduct" parameterType="houseProductDto">
		update house_product
		set addressId = #{addressId}, floor = #{floor}, buildYear = #{buildYear}, dealAmount = #{dealAmount}, area = #{area}, dealType = #{dealType}, content = #{content}
		where houseProductId = #{houseProductId}
	</update>
	
	<!-- 매물 판매완료로 변경 -->
	<update id="soldOutHouseProduct" parameterType="int">
		update house_product
		set stateFlag = 1
		where houseProductId = #{houseProductid}
	</update>
	
	<!-- 매물 삭제 -->
	<delete id="deleteHouseProduct" parameterType="int">
		delete from house_product
		where houseProductId = #{houseProductid}
	</delete>
	
	<!-- 매물 주변 부가정보 -->
	
	<!-- 매물 신고 (매물을 올린 기업회원 신고) -->
	<update id="reportHouseProduct" parameterType="String">
		update user
		set reportCount = reportCount + 1
		where userId = #{userid}
	</update>
	
</mapper>