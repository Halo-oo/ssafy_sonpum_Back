<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.model.mapper.UserMapper">

	<!-- ID 중복체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(userid)
		from user
		where userid = #{userid}
	</select>

	<!-- 회원가입 -->
	<insert id="register" parameterType="userDto">
		insert into user(userId, userName, userPwd, email, joindate, role, delFlag, phoneNumber, reportCount)
		values (#{userId}, #{userName}, #{userPwd}, #{email}, now(), #{role}, 0, #{phoneNumber}, 0);
	</insert>

	<!-- 로그인 -->
	<select id="login" parameterType="userDto" resultType="userDto">
		select userid, username, email, phonenumber, joindate, reportCount, role
		from user
		where userid = #{userId} and userpwd = #{userPwd} and delFlag = 0
	</select>
	
	<!-- 사용자 인증, 사용자 정보 상세조회 -->
	<select id="userInfo" parameterType="string" resultType="userDto">
		select userid, userName, email, phonenumber, profileimage, role, joindate
		from user
		where userid = #{userid}
	</select>
	
	<!-- 사용자 token 받아오기 -->
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user
		where userid = #{userid}
	</select>
	
	<!-- 사용자 token 업데이트 -->
	<update id="saveRefreshToken" parameterType="userTokenDto">
		update user
		set token = #{token}
		where userid = #{userId}
	</update>
	
	<!-- 로그아웃, 사용자 token 삭제 -->
	<update id="deleteRefreshToken" parameterType="userTokenDto">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where userid = #{userId}
	</update>
	
	
	<!-- 마이페이지 -->
	<!-- 회원 정보 조회 -->
	<select id="getUserInfo" parameterType="String" resultType="userDto">
		select userId, userName, email, joindate, role, delFlag, phoneNumber, reportCount, profileImage
		from user
		where userid = #{userid}
	</select>
	
	<!-- 회원 정보 수정 --> <!-- 프로필 이미지  -->
	<update id="updateUserInfo" parameterType="userDto">
		update user
		set userName = #{userName}, email = #{email}, phoneNumber = #{phoneNumber}, profileImage = #{profileImage}		
		where userid = #{userId}
	</update>
	
	<!-- 회원 이메일 유효성 확인 -->
	<select id="certifyEmail" parameterType="userDto" resultType="userDto">
		select email
		from user
		where userId = #{userId}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="chageUserPwd" parameterType="userDto">
		update user
		set userPwd = #{userPwd}
		where userid = #{userId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="withdrawal" parameterType="String">
		update user
		set delFlag = 1
		where userid = #{userid}
	</update>
	
	<!-- 북마크(관심) 매물 목록 조회-->
	<select id="bookmarkHouseProductList" parameterType="String" resultType="houseProductDto">
		select product.houseProductId, product.userId, product.floor, product.buildYear, product.dealAmount, product.area, product.dealType, product.stateFlag, product.content
		from house_product_bookmark bookmark
		left join  house_product product 
			on #{userid} = product.userId 
		    and bookmark.houseProductId = product.houseProductId
	</select>
	
	<!-- 아파트(매물) 리뷰 목록 -->
	<select id="reviewHouseProductList" parameterType="String" resultType="houseProductReviewDto">
		select houseProductReviewId, houseProductId, userId, rating, content, image, regtime
		from house_product_review
		where writerUserId = #{writerUserid}
		order by regtime desc
	</select>
	
	
	<!-- 매물 목록 조회 : 해당 기업회원이 올린 매물 목록 -->
	<select id="userProductList" parameterType="String" resultType="houseProductDto">
		<!-- select houseProductId, addressId, floor, buildYear, dealAmount, area, dealType, stateFlag, content
		from house_product
		where userId = #{userid} -->
		select houseProductId, house_product.addressId, floor, house_product.buildYear, dealAmount, area, dealType, stateFlag, content, address.apartName, address.lat, address.lng
		from house_product 
		left join address
			on house_product.addressId = address.addressId
		where userId = #{userid};
	</select>
	
</mapper>